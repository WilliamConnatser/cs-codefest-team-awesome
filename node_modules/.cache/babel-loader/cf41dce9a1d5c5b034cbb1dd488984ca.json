{"ast":null,"code":"var _jsxFileName = \"/Users/reappdev/repos/iwealth-tax-lien-calculator/src/components/dealFormPartial/dealFormPartial.jsx\";\nimport React, { Component } from \"react\";\nimport Slider, { createSliderWithTooltip } from \"rc-slider\";\nimport \"rc-slider/assets/index.css\";\nimport \"./dealFormPartial.css\";\nconst SliderWithTooltip = createSliderWithTooltip(Slider);\n\nclass DealFormPartial extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n    this.expenseMarks = {\n      0: \"0%\",\n      5: \"5%\",\n      10: \"10%\",\n      15: \"15%\",\n      20: \"20%\",\n      25: \"25%\"\n    };\n    this.grossRentMarks = {\n      500: \"$500\",\n      1000: \"$1,000\",\n      1500: \"$1,500\",\n      2000: \"$2,000\",\n      2500: \"$2,500\",\n      3000: \"$3,000\"\n    };\n    this.redemptionRatioMarks = {\n      1: \"1\",\n      5: \"5\",\n      10: \"10\",\n      15: \"15\",\n      20: \"20\"\n    };\n\n    this.getExpenseAmt = expense => {\n      const _this$props$dealInfor = this.props.dealInformation,\n            avgGrossRent = _this$props$dealInfor.avgGrossRent,\n            expenses = _this$props$dealInfor.expenses;\n      const amt = Math.round(avgGrossRent * expenses[expense] / 100);\n      return \"($\".concat(amt, \")\");\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          onExpenseChange = _this$props.onExpenseChange,\n          onGrossRentChange = _this$props.onGrossRentChange,\n          onRedemptionRatioChange = _this$props.onRedemptionRatioChange;\n    const _this$props$dealInfor2 = this.props.dealInformation,\n          isFullyManaged = _this$props$dealInfor2.isFullyManaged,\n          avgGrossRent = _this$props$dealInfor2.avgGrossRent,\n          expenses = _this$props$dealInfor2.expenses,\n          redemptionRatio = _this$props$dealInfor2.redemptionRatio;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"text-secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Deal Information\"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Redemptions\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"slider-container col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"slider-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Non-Redemption Ratio\"), React.createElement(SliderWithTooltip, {\n      min: 1,\n      max: 20,\n      marks: this.redemptionRatioMarks,\n      tipFormatter: v => \"  1 in \".concat(v, \" tax liens becomes a house.  \"),\n      tipProps: {\n        overlayClassName: \"foo\"\n      },\n      value: redemptionRatio,\n      onChange: onRedemptionRatioChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"redemption-ratio-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"1 in \", redemptionRatio, \" liens becomes a house.\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Rental Income\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"slider-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Avg. Gross Rent\"), React.createElement(SliderWithTooltip, {\n      min: 500,\n      max: 3000,\n      marks: this.grossRentMarks,\n      tipFormatter: v => \"$\".concat(v),\n      tipProps: {\n        overlayClassName: \"foo\"\n      },\n      value: avgGrossRent,\n      onChange: v => onGrossRentChange(v),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"avg-gross-rent-amount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"$\", avgGrossRent))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"slider-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Management\"), React.createElement(SliderWithTooltip, {\n      min: 0,\n      max: 25,\n      marks: this.expenseMarks,\n      tipFormatter: v => \"\".concat(v, \" %\"),\n      tipProps: {\n        overlayClassName: \"foo\"\n      },\n      value: expenses.management,\n      onChange: v => onExpenseChange(v, \"management\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"expense-cost\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.getExpenseAmt(\"management\")))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"slider-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Vacancy\"), React.createElement(SliderWithTooltip, {\n      min: 0,\n      max: 25,\n      marks: this.expenseMarks,\n      tipFormatter: v => \"\".concat(v, \" %\"),\n      tipProps: {\n        overlayClassName: \"foo\"\n      },\n      value: expenses.vacancy,\n      onChange: v => onExpenseChange(v, \"vacancy\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"expense-cost\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, this.getExpenseAmt(\"vacancy\")))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"slider-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Repair\"), React.createElement(SliderWithTooltip, {\n      min: 0,\n      max: 25,\n      marks: this.expenseMarks,\n      tipFormatter: v => \"\".concat(v, \" %\"),\n      tipProps: {\n        overlayClassName: \"foo\"\n      },\n      value: expenses.repair,\n      onChange: v => onExpenseChange(v, \"repair\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"expense-cost\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, this.getExpenseAmt(\"repair\")))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"col-sm-6 net-rent-title\",\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Avg. Net Rent\"), React.createElement(\"p\", {\n      className: \"col-sm-6 net-rent-amount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"$\", Math.round(avgGrossRent * (1 - (expenses.management + expenses.vacancy + expenses.repair) / 100)))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"iWealth Service Type\")), React.createElement(\"div\", {\n      className: \"form-group col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"custom-control-input\",\n      id: \"isFullyManaged\",\n      name: \"isFullyManaged\",\n      checked: isFullyManaged,\n      onChange: onSecondaryMarketChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: \"isFullyManaged\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Invest in Secondary Market\"))));\n  }\n\n}\n\nexport default DealFormPartial; // *****************************\n// Deal Information\n// *****************************\n// Fee Structure\n// --Setup: One-time (Up to 20 liens can purchase for $10,000)\n// --Fully Managed: Ongoing (2nd time forward get 10% discount)\n// Non Redemption Ratio (e.g. 1 in 6 non-redemptions) --Done\n// --Need at least this many liens (need this much cash = avg lien cost * ratio + fee)\n// Avg Net Rent (Caculated Field Gross minus costs) -- Done\n// --Gross Rent\n// --Pct Management (10%)\n// --Pct Vacancy\n// --Pct Repair","map":{"version":3,"sources":["/Users/reappdev/repos/iwealth-tax-lien-calculator/src/components/dealFormPartial/dealFormPartial.jsx"],"names":["React","Component","Slider","createSliderWithTooltip","SliderWithTooltip","DealFormPartial","state","expenseMarks","grossRentMarks","redemptionRatioMarks","getExpenseAmt","expense","props","dealInformation","avgGrossRent","expenses","amt","Math","round","render","onExpenseChange","onGrossRentChange","onRedemptionRatioChange","isFullyManaged","redemptionRatio","v","overlayClassName","management","vacancy","repair","textAlign","onSecondaryMarketChange"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Slider, { createSliderWithTooltip } from \"rc-slider\";\nimport \"rc-slider/assets/index.css\";\nimport \"./dealFormPartial.css\";\n\nconst SliderWithTooltip = createSliderWithTooltip(Slider);\n\nclass DealFormPartial extends Component {\n  state = {};\n\n  expenseMarks = {\n    0: \"0%\",\n    5: \"5%\",\n    10: \"10%\",\n    15: \"15%\",\n    20: \"20%\",\n    25: \"25%\"\n  };\n\n  grossRentMarks = {\n    500: \"$500\",\n    1000: \"$1,000\",\n    1500: \"$1,500\",\n    2000: \"$2,000\",\n    2500: \"$2,500\",\n    3000: \"$3,000\"\n  };\n\n  redemptionRatioMarks = {\n    1: \"1\",\n    5: \"5\",\n    10: \"10\",\n    15: \"15\",\n    20: \"20\"\n  };\n\n  getExpenseAmt = expense => {\n    const { avgGrossRent, expenses } = this.props.dealInformation;\n    const amt = Math.round((avgGrossRent * expenses[expense]) / 100);\n    return `($${amt})`;\n  };\n\n  render() {\n    const {\n      onExpenseChange,\n      onGrossRentChange,\n      onRedemptionRatioChange\n    } = this.props;\n    const {\n      isFullyManaged,\n      avgGrossRent,\n      expenses,\n      redemptionRatio\n    } = this.props.dealInformation;\n\n    return (\n      <React.Fragment>\n        <h3 className=\"text-secondary\">Deal Information</h3>\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <h5>Redemptions</h5>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"slider-container col-sm-6\">\n            <p className=\"slider-title\">Non-Redemption Ratio</p>\n            <SliderWithTooltip\n              min={1}\n              max={20}\n              marks={this.redemptionRatioMarks}\n              tipFormatter={v => `  1 in ${v} tax liens becomes a house.  `}\n              tipProps={{ overlayClassName: \"foo\" }}\n              value={redemptionRatio}\n              onChange={onRedemptionRatioChange}\n            />\n          </div>\n          <div className=\"col-sm-6\">\n            <p className=\"redemption-ratio-text\">\n              1 in {redemptionRatio} liens becomes a house.\n            </p>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <h5>Rental Income</h5>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <p className=\"slider-title\">Avg. Gross Rent</p>\n            <SliderWithTooltip\n              min={500}\n              max={3000}\n              marks={this.grossRentMarks}\n              tipFormatter={v => `$${v}`}\n              tipProps={{ overlayClassName: \"foo\" }}\n              value={avgGrossRent}\n              onChange={v => onGrossRentChange(v)}\n            />\n          </div>\n          <div className=\"col-sm-6\">\n            <p className=\"avg-gross-rent-amount\">${avgGrossRent}</p>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <p className=\"slider-title\">Management</p>\n            <SliderWithTooltip\n              min={0}\n              max={25}\n              marks={this.expenseMarks}\n              tipFormatter={v => `${v} %`}\n              tipProps={{ overlayClassName: \"foo\" }}\n              value={expenses.management}\n              onChange={v => onExpenseChange(v, \"management\")}\n            />\n          </div>\n          <div className=\"col-sm-6\">\n            <p className=\"expense-cost\">{this.getExpenseAmt(\"management\")}</p>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <p className=\"slider-title\">Vacancy</p>\n            <SliderWithTooltip\n              min={0}\n              max={25}\n              marks={this.expenseMarks}\n              tipFormatter={v => `${v} %`}\n              tipProps={{ overlayClassName: \"foo\" }}\n              value={expenses.vacancy}\n              onChange={v => onExpenseChange(v, \"vacancy\")}\n            />\n          </div>\n          <div className=\"col-sm-6\">\n            <p className=\"expense-cost\">{this.getExpenseAmt(\"vacancy\")}</p>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <p className=\"slider-title\">Repair</p>\n            <SliderWithTooltip\n              min={0}\n              max={25}\n              marks={this.expenseMarks}\n              tipFormatter={v => `${v} %`}\n              tipProps={{ overlayClassName: \"foo\" }}\n              value={expenses.repair}\n              onChange={v => onExpenseChange(v, \"repair\")}\n            />\n          </div>\n          <div className=\"col-sm-6\">\n            <p className=\"expense-cost\">{this.getExpenseAmt(\"repair\")}</p>\n          </div>\n        </div>\n        <div className=\"row\">\n          <p\n            className=\"col-sm-6 net-rent-title\"\n            style={{ textAlign: \"center\" }}\n          >\n            Avg. Net Rent\n          </p>\n          <p className=\"col-sm-6 net-rent-amount\">\n            $\n            {Math.round(\n              avgGrossRent *\n              (1 -\n                (expenses.management + expenses.vacancy + expenses.repair) /\n                100)\n            )}\n          </p>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <h5>iWealth Service Type</h5>\n          </div>\n          <div className=\"form-group col-sm-12\">\n            <input\n              type=\"checkbox\"\n              className=\"custom-control-input\"\n              id=\"isFullyManaged\"\n              name=\"isFullyManaged\"\n              checked={isFullyManaged}\n              onChange={onSecondaryMarketChange}\n            />\n            <label className=\"custom-control-label\" htmlFor=\"isFullyManaged\">\n              Invest in Secondary Market\n              </label>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default DealFormPartial;\n\n// *****************************\n// Deal Information\n// *****************************\n// Fee Structure\n// --Setup: One-time (Up to 20 liens can purchase for $10,000)\n// --Fully Managed: Ongoing (2nd time forward get 10% discount)\n// Non Redemption Ratio (e.g. 1 in 6 non-redemptions) --Done\n// --Need at least this many liens (need this much cash = avg lien cost * ratio + fee)\n// Avg Net Rent (Caculated Field Gross minus costs) -- Done\n// --Gross Rent\n// --Pct Management (10%)\n// --Pct Vacancy\n// --Pct Repair\n"]},"metadata":{},"sourceType":"module"}