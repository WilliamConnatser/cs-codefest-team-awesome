{"ast":null,"code":"import Loan from \"./loan\";\nimport { round } from \"../utils/NumberUtils\";\nexport default class House {\n  constructor(lien, renoInformation, dealInformation) {\n    const avgRenoDuration = renoInformation.avgRenoDuration,\n          avgRenoCost = renoInformation.avgRenoCost,\n          loanRate = renoInformation.loanRate,\n          loanTerm = renoInformation.loanTerm;\n    const expenses = dealInformation.expenses,\n          avgGrossRent = dealInformation.avgGrossRent;\n    this.lien = lien;\n    this.renoDuration = avgRenoDuration; // Set Dates\n\n    this.initializeRenoDates();\n    this.initializeRentStartDate();\n    this.expenses = expenses;\n    this.avgGrossRent = avgGrossRent;\n    this.loan = new Loan(loanRate / 100, loanTerm * 12, avgRenoCost);\n  }\n\n  initializeRenoDates() {\n    // Start\n    this.renoStartDate = new Date(this.lien.becomeHouseDate); // End\n\n    this.renoEndDate = new Date(this.renoStartDate);\n    this.renoEndDate.setMonth(this.renoEndDate.getMonth() + this.renoDuration);\n  }\n\n  initializeRentStartDate() {\n    this.rentStartDate = new Date(this.renoEndDate);\n    this.rentStartDate = this.rentStartDate.setMonth(this.rentStartDate.getMonth() + 1);\n  }\n\n  collectRent() {\n    const management = round(this.avgGrossRent * this.expenses.management / 100, 2);\n    const vacancy = round(this.avgGrossRent * this.expenses.vacancy / 100, 2);\n    const repair = round(this.avgGrossRent * this.expenses.repair / 100, 2);\n    const totalExpenses = management + vacancy + repair;\n    const netRent = this.avgGrossRent - totalExpenses;\n    return {\n      grossRent: this.avgGrossRent,\n      management,\n      vacancy,\n      repair,\n      totalExpenses,\n      netRent\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/reappdev/repos/iwealth-tax-lien-calculator/src/models/house.jsx"],"names":["Loan","round","House","constructor","lien","renoInformation","dealInformation","avgRenoDuration","avgRenoCost","loanRate","loanTerm","expenses","avgGrossRent","renoDuration","initializeRenoDates","initializeRentStartDate","loan","renoStartDate","Date","becomeHouseDate","renoEndDate","setMonth","getMonth","rentStartDate","collectRent","management","vacancy","repair","totalExpenses","netRent","grossRent"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,SAASC,KAAT,QAAsB,sBAAtB;AAEA,eAAe,MAAMC,KAAN,CAAY;AACzBC,EAAAA,WAAW,CAACC,IAAD,EAAOC,eAAP,EAAwBC,eAAxB,EAAyC;AAAA,UAEhDC,eAFgD,GAM9CF,eAN8C,CAEhDE,eAFgD;AAAA,UAGhDC,WAHgD,GAM9CH,eAN8C,CAGhDG,WAHgD;AAAA,UAIhDC,QAJgD,GAM9CJ,eAN8C,CAIhDI,QAJgD;AAAA,UAKhDC,QALgD,GAM9CL,eAN8C,CAKhDK,QALgD;AAAA,UAQ1CC,QAR0C,GAQfL,eARe,CAQ1CK,QAR0C;AAAA,UAQhCC,YARgC,GAQfN,eARe,CAQhCM,YARgC;AAUlD,SAAKR,IAAL,GAAYA,IAAZ;AACA,SAAKS,YAAL,GAAoBN,eAApB,CAXkD,CAalD;;AACA,SAAKO,mBAAL;AACA,SAAKC,uBAAL;AAEA,SAAKJ,QAAL,GAAgBA,QAAhB;AACA,SAAKC,YAAL,GAAoBA,YAApB;AAEA,SAAKI,IAAL,GAAY,IAAIhB,IAAJ,CAASS,QAAQ,GAAG,GAApB,EAAyBC,QAAQ,GAAG,EAApC,EAAwCF,WAAxC,CAAZ;AACD;;AAEDM,EAAAA,mBAAmB,GAAG;AACpB;AACA,SAAKG,aAAL,GAAqB,IAAIC,IAAJ,CAAS,KAAKd,IAAL,CAAUe,eAAnB,CAArB,CAFoB,CAIpB;;AACA,SAAKC,WAAL,GAAmB,IAAIF,IAAJ,CAAS,KAAKD,aAAd,CAAnB;AACA,SAAKG,WAAL,CAAiBC,QAAjB,CAA0B,KAAKD,WAAL,CAAiBE,QAAjB,KAA8B,KAAKT,YAA7D;AACD;;AAEDE,EAAAA,uBAAuB,GAAG;AACxB,SAAKQ,aAAL,GAAqB,IAAIL,IAAJ,CAAS,KAAKE,WAAd,CAArB;AACA,SAAKG,aAAL,GAAqB,KAAKA,aAAL,CAAmBF,QAAnB,CACnB,KAAKE,aAAL,CAAmBD,QAAnB,KAAgC,CADb,CAArB;AAGD;;AAEDE,EAAAA,WAAW,GAAG;AACZ,UAAMC,UAAU,GAAGxB,KAAK,CACrB,KAAKW,YAAL,GAAoB,KAAKD,QAAL,CAAcc,UAAnC,GAAiD,GAD3B,EAEtB,CAFsB,CAAxB;AAIA,UAAMC,OAAO,GAAGzB,KAAK,CAAE,KAAKW,YAAL,GAAoB,KAAKD,QAAL,CAAce,OAAnC,GAA8C,GAA/C,EAAoD,CAApD,CAArB;AACA,UAAMC,MAAM,GAAG1B,KAAK,CAAE,KAAKW,YAAL,GAAoB,KAAKD,QAAL,CAAcgB,MAAnC,GAA6C,GAA9C,EAAmD,CAAnD,CAApB;AACA,UAAMC,aAAa,GAAGH,UAAU,GAAGC,OAAb,GAAuBC,MAA7C;AACA,UAAME,OAAO,GAAG,KAAKjB,YAAL,GAAoBgB,aAApC;AAEA,WAAO;AACLE,MAAAA,SAAS,EAAE,KAAKlB,YADX;AAELa,MAAAA,UAFK;AAGLC,MAAAA,OAHK;AAILC,MAAAA,MAJK;AAKLC,MAAAA,aALK;AAMLC,MAAAA;AANK,KAAP;AAQD;;AA1DwB","sourcesContent":["import Loan from \"./loan\";\nimport { round } from \"../utils/NumberUtils\";\n\nexport default class House {\n  constructor(lien, renoInformation, dealInformation) {\n    const {\n      avgRenoDuration,\n      avgRenoCost,\n      loanRate,\n      loanTerm\n    } = renoInformation;\n\n    const { expenses, avgGrossRent } = dealInformation;\n\n    this.lien = lien;\n    this.renoDuration = avgRenoDuration;\n\n    // Set Dates\n    this.initializeRenoDates();\n    this.initializeRentStartDate();\n\n    this.expenses = expenses;\n    this.avgGrossRent = avgGrossRent;\n\n    this.loan = new Loan(loanRate / 100, loanTerm * 12, avgRenoCost);\n  }\n\n  initializeRenoDates() {\n    // Start\n    this.renoStartDate = new Date(this.lien.becomeHouseDate);\n\n    // End\n    this.renoEndDate = new Date(this.renoStartDate);\n    this.renoEndDate.setMonth(this.renoEndDate.getMonth() + this.renoDuration);\n  }\n\n  initializeRentStartDate() {\n    this.rentStartDate = new Date(this.renoEndDate);\n    this.rentStartDate = this.rentStartDate.setMonth(\n      this.rentStartDate.getMonth() + 1\n    );\n  }\n\n  collectRent() {\n    const management = round(\n      (this.avgGrossRent * this.expenses.management) / 100,\n      2\n    );\n    const vacancy = round((this.avgGrossRent * this.expenses.vacancy) / 100, 2);\n    const repair = round((this.avgGrossRent * this.expenses.repair) / 100, 2);\n    const totalExpenses = management + vacancy + repair;\n    const netRent = this.avgGrossRent - totalExpenses;\n\n    return {\n      grossRent: this.avgGrossRent,\n      management,\n      vacancy,\n      repair,\n      totalExpenses,\n      netRent\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}