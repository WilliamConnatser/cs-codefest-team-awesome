{"ast":null,"code":"import { getActiveStates } from \"./fakeStateService\";\nconst activeStates = getActiveStates();\nconst lienCosts = activeStates.map(location => ({\n  avgLienCostLiveAuction: location.avgLienCostLiveAuction,\n  avgLienCostSecondary: location.avgLienCostSecondary\n}));\nconst defaults = {\n  investorInformation: {\n    secondaryMarket: false,\n    startDate: \"\",\n    passiveIncomeGoal: 5000,\n    investmentCapital: 25000,\n    netRentBreakdown: {\n      paydownDebtPct: 50,\n      reinvestPct: 30,\n      spendPct: 20\n    },\n    locations: [activeStates[1], activeStates[0], activeStates[0]],\n    lienCosts: [lienCosts[1], lienCosts[0], lienCosts[0]],\n    lienInterestRates: [activeStates[1].avgLienInterestRate, activeStates[0].avgLienInterestRate, activeStates[0].avgLienInterestRate]\n  },\n  dealInformation: {\n    redemptionRatio: 6,\n    avgGrossRent: 650,\n    expenses: {\n      management: 10,\n      vacancy: 12,\n      repair: 8\n    }\n  },\n  renoInformation: {\n    avgRenoDuration: 2,\n    avgRenoCost: 25000,\n    loanRate: 7.0,\n    loanTerm: 15\n  },\n  serviceType: {\n    setup: true,\n    recurring: false\n  }\n};\nexport function getDefaults() {\n  return defaults;\n}","map":{"version":3,"sources":["/Users/reappdev/repos/iwealth-tax-lien-calculator/src/services/fakeDefaultService.jsx"],"names":["getActiveStates","activeStates","lienCosts","map","location","avgLienCostLiveAuction","avgLienCostSecondary","defaults","investorInformation","secondaryMarket","startDate","passiveIncomeGoal","investmentCapital","netRentBreakdown","paydownDebtPct","reinvestPct","spendPct","locations","lienInterestRates","avgLienInterestRate","dealInformation","redemptionRatio","avgGrossRent","expenses","management","vacancy","repair","renoInformation","avgRenoDuration","avgRenoCost","loanRate","loanTerm","serviceType","setup","recurring","getDefaults"],"mappings":"AAAA,SAASA,eAAT,QAAgC,oBAAhC;AAEA,MAAMC,YAAY,GAAGD,eAAe,EAApC;AACA,MAAME,SAAS,GAAGD,YAAY,CAACE,GAAb,CAAiBC,QAAQ,KAAK;AAC9CC,EAAAA,sBAAsB,EAAED,QAAQ,CAACC,sBADa;AAE9CC,EAAAA,oBAAoB,EAAEF,QAAQ,CAACE;AAFe,CAAL,CAAzB,CAAlB;AAKA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,mBAAmB,EAAE;AACnBC,IAAAA,eAAe,EAAE,KADE;AAEnBC,IAAAA,SAAS,EAAE,EAFQ;AAGnBC,IAAAA,iBAAiB,EAAE,IAHA;AAInBC,IAAAA,iBAAiB,EAAE,KAJA;AAKnBC,IAAAA,gBAAgB,EAAE;AAChBC,MAAAA,cAAc,EAAE,EADA;AAEhBC,MAAAA,WAAW,EAAE,EAFG;AAGhBC,MAAAA,QAAQ,EAAE;AAHM,KALC;AAUnBC,IAAAA,SAAS,EAAE,CAAChB,YAAY,CAAC,CAAD,CAAb,EAAkBA,YAAY,CAAC,CAAD,CAA9B,EAAmCA,YAAY,CAAC,CAAD,CAA/C,CAVQ;AAWnBC,IAAAA,SAAS,EAAE,CAACA,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,EAA6BA,SAAS,CAAC,CAAD,CAAtC,CAXQ;AAYnBgB,IAAAA,iBAAiB,EAAE,CACjBjB,YAAY,CAAC,CAAD,CAAZ,CAAgBkB,mBADC,EAEjBlB,YAAY,CAAC,CAAD,CAAZ,CAAgBkB,mBAFC,EAGjBlB,YAAY,CAAC,CAAD,CAAZ,CAAgBkB,mBAHC;AAZA,GADN;AAmBfC,EAAAA,eAAe,EAAE;AACfC,IAAAA,eAAe,EAAE,CADF;AAEfC,IAAAA,YAAY,EAAE,GAFC;AAGfC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,UAAU,EAAE,EADJ;AAERC,MAAAA,OAAO,EAAE,EAFD;AAGRC,MAAAA,MAAM,EAAE;AAHA;AAHK,GAnBF;AA4BfC,EAAAA,eAAe,EAAE;AACfC,IAAAA,eAAe,EAAE,CADF;AAEfC,IAAAA,WAAW,EAAE,KAFE;AAGfC,IAAAA,QAAQ,EAAE,GAHK;AAIfC,IAAAA,QAAQ,EAAE;AAJK,GA5BF;AAkCfC,EAAAA,WAAW,EAAE;AACXC,IAAAA,KAAK,EAAE,IADI;AAEXC,IAAAA,SAAS,EAAE;AAFA;AAlCE,CAAjB;AAwCA,OAAO,SAASC,WAAT,GAAuB;AAC5B,SAAO5B,QAAP;AACD","sourcesContent":["import { getActiveStates } from \"./fakeStateService\";\n\nconst activeStates = getActiveStates();\nconst lienCosts = activeStates.map(location => ({\n  avgLienCostLiveAuction: location.avgLienCostLiveAuction,\n  avgLienCostSecondary: location.avgLienCostSecondary\n}));\n\nconst defaults = {\n  investorInformation: {\n    secondaryMarket: false,\n    startDate: \"\",\n    passiveIncomeGoal: 5000,\n    investmentCapital: 25000,\n    netRentBreakdown: {\n      paydownDebtPct: 50,\n      reinvestPct: 30,\n      spendPct: 20\n    },\n    locations: [activeStates[1], activeStates[0], activeStates[0]],\n    lienCosts: [lienCosts[1], lienCosts[0], lienCosts[0]],\n    lienInterestRates: [\n      activeStates[1].avgLienInterestRate,\n      activeStates[0].avgLienInterestRate,\n      activeStates[0].avgLienInterestRate\n    ]\n  },\n  dealInformation: {\n    redemptionRatio: 6,\n    avgGrossRent: 650,\n    expenses: {\n      management: 10,\n      vacancy: 12,\n      repair: 8\n    }\n  },\n  renoInformation: {\n    avgRenoDuration: 2,\n    avgRenoCost: 25000,\n    loanRate: 7.0,\n    loanTerm: 15\n  },\n  serviceType: {\n    setup: true,\n    recurring: false\n  }\n};\n\nexport function getDefaults() {\n  return defaults;\n}\n"]},"metadata":{},"sourceType":"module"}