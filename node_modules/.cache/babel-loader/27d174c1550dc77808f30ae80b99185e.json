{"ast":null,"code":"var _jsxFileName = \"/Users/reappdev/repos/iwealth-tax-lien-calculator/src/components/investorFormPartial/investorFormPartial.jsx\";\nimport React, { Component } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { getActiveStates } from \"./../../services/fakeStateService\";\nimport Joi from \"joi-browser\"; // If i don't end up using this, I need to npm uninstall.\n// import Slider from \"rc-slider\";\n// import \"rc-slider/assets/index.css\";\n// const createSliderWithTooltip = Slider.createSliderWithTooltip;\n// const Range = createSliderWithTooltip(Slider.Range);\n// const Handle = Slider.Handle;\n\nclass InvestorFormPartial extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      locationOptions: []\n    };\n    this.schema = {\n      passiveIncomeGoal: Joi.number().min(1).required()\n    };\n\n    this.validate = () => {\n      Joi.validate(this.props.investorInformation.passiveIncomeGoal, this.shcema);\n    };\n\n    this.getLocationLabel = index => {\n      switch (index) {\n        case 0:\n          return \"Primary\";\n\n        case 1:\n          return \"Alternate 1\";\n\n        default:\n          return \"Alternate 2\";\n      }\n    };\n\n    this.renderError = field => {\n      const errors = this.props.errors;\n      if (!errors) return;\n      if (!errors[field]) return;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, errors[field]));\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      locationOptions: getActiveStates()\n    });\n  }\n\n  render() {\n    const locationOptions = this.state.locationOptions;\n    const _this$props = this.props,\n          onDateChange = _this$props.onDateChange,\n          onNumberInputChange = _this$props.onNumberInputChange,\n          onNetRentPreferenceChange = _this$props.onNetRentPreferenceChange,\n          onLocationChange = _this$props.onLocationChange,\n          onLienCostChange = _this$props.onLienCostChange,\n          onLienInterestChange = _this$props.onLienInterestChange,\n          onSecondaryMarketChange = _this$props.onSecondaryMarketChange;\n    const _this$props$investorI = this.props.investorInformation,\n          secondaryMarket = _this$props$investorI.secondaryMarket,\n          startDate = _this$props$investorI.startDate,\n          passiveIncomeGoal = _this$props$investorI.passiveIncomeGoal,\n          investmentCapital = _this$props$investorI.investmentCapital,\n          lienCosts = _this$props$investorI.lienCosts,\n          lienInterestRates = _this$props$investorI.lienInterestRates,\n          locations = _this$props$investorI.locations;\n    const _this$props$investorI2 = this.props.investorInformation.netRentBreakdown,\n          paydownDebtPct = _this$props$investorI2.paydownDebtPct,\n          reinvestPct = _this$props$investorI2.reinvestPct,\n          spendPct = _this$props$investorI2.spendPct;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"text-secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Investor Information\"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Income & Capital\")), React.createElement(\"div\", {\n      className: \"form-group col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"startDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Start Month\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(DatePicker, {\n      selected: startDate,\n      onChange: onDateChange,\n      className: \"form-control\",\n      dateFormat: \"MM/yyyy\",\n      showMonthYearPicker: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"passiveIncomeGoal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Passive Income\"), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"$\")), React.createElement(\"input\", {\n      id: \"passiveIncomeGoal\",\n      name: \"investorInformation.passiveIncomeGoal\",\n      onChange: onNumberInputChange,\n      className: \"form-control\",\n      type: \"number\",\n      value: passiveIncomeGoal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), this.renderError(\"passiveIncomeGoal\"))), React.createElement(\"div\", {\n      className: \"form-group col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"investmentCapital\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Available Capital\"), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"$\")), React.createElement(\"input\", {\n      id: \"investmentCapital\",\n      name: \"investorInformation.investmentCapital\",\n      onChange: onNumberInputChange,\n      className: \"form-control\",\n      type: \"number\",\n      value: investmentCapital,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Plan for Net Rent\")), React.createElement(\"div\", {\n      className: \"form-group col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"spendPct\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Retained Income\"), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"spendPct\",\n      name: \"spendPct\",\n      onChange: onNetRentPreferenceChange,\n      className: \"form-control\",\n      type: \"number\",\n      value: spendPct,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"%\")))), React.createElement(\"div\", {\n      className: \"form-group col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"paydownDebtPct\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Pay Down Debt\"), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"paydownDebtPct\",\n      name: \"paydownDebtPct\",\n      onChange: onNetRentPreferenceChange,\n      className: \"form-control\",\n      type: \"number\",\n      value: paydownDebtPct,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"%\")))), React.createElement(\"div\", {\n      className: \"form-group col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"reinvestPct\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Reinvest\"), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"reinvestPct\",\n      name: \"reinvestPct\",\n      onChange: onNetRentPreferenceChange,\n      className: \"form-control\",\n      type: \"number\",\n      value: reinvestPct,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"%\"))))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Investment Locations\")), React.createElement(\"div\", {\n      className: \"form-group col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"custom-control custom-switch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"custom-control-input\",\n      id: \"secondaryMarket\",\n      name: \"secondaryMarket\",\n      checked: secondaryMarket,\n      onChange: onSecondaryMarketChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: \"secondaryMarket\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Invest in Secondary Market\"))), locations.map((location, index) => React.createElement(React.Fragment, {\n      key: \"location\".concat(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"location\".concat(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, this.getLocationLabel(index)), React.createElement(\"select\", {\n      onChange: onLocationChange,\n      className: \"form-control\",\n      name: \"location-\".concat(index),\n      id: \"location\".concat(index),\n      value: location.abbreviation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, locationOptions.map(locOption => React.createElement(\"option\", {\n      key: locOption.abbreviation,\n      value: locOption.abbreviation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, locOption.name)))), React.createElement(\"div\", {\n      hidden: secondaryMarket,\n      className: \"form-group col-sm-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"avgLienCostLiveAuction-\".concat(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"Avg Lien Cost\"), React.createElement(\"input\", {\n      id: \"avgLienCostLiveAuction-\".concat(index),\n      name: \"avgLienCostLiveAuction-\".concat(index),\n      className: \"form-control\",\n      type: \"number\",\n      onChange: onLienCostChange,\n      value: lienCosts[index].avgLienCostLiveAuction,\n      disabled: location.abbreviation === \"DEFAULT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      hidden: !secondaryMarket,\n      className: \"form-group col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"avgLienCostSecondary-\".concat(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"Avg Redemptive Value\"), React.createElement(\"input\", {\n      id: \"avgLienCostSecondary-\".concat(index),\n      name: \"avgLienCostSecondary-\".concat(index),\n      className: \"form-control\",\n      type: \"number\",\n      onChange: onLienCostChange,\n      value: lienCosts[index].avgLienCostSecondary,\n      disabled: location.abbreviation === \"DEFAULT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"avgLienInterestRate-\".concat(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, \"Interest\"), React.createElement(\"input\", {\n      id: \"avgLienInterestRate-\".concat(index),\n      name: \"avgLienInterestRate-\".concat(index),\n      className: \"form-control\",\n      type: \"number\",\n      onChange: onLienInterestChange,\n      value: lienInterestRates[index],\n      disabled: location.abbreviation === \"DEFAULT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default InvestorFormPartial; // *****************************\n// Investor Information\n// *****************************\n// (1) Investment Start Date -- Done\n// (2) Passive Income Goal -- Done\n// (3) Cash Available for Investing -- Done\n// (4) Preference for treatment of Rent Money (Net Rent Breakdown) -- Done\n// -- (a) Paydown Debt (accelerate payments towards outstanding loans)\n// -- (b) Save for more liens (e.g. add to pool of money for buying more tax liens)\n// -- (c) Passive Income to enjoy some of it (take money out that will not be used for investing at all)\n// (5) States willing to Invest In -- WIP\n//  -- (a) First choice\n//  -- (b) Second choice\n//  -- (c) Third choice\n// ---- Will determing Redemption Period\n// ---- Will determine Foreclosure Months\n// ---- Need some way to prioritize one state over another","map":{"version":3,"sources":["/Users/reappdev/repos/iwealth-tax-lien-calculator/src/components/investorFormPartial/investorFormPartial.jsx"],"names":["React","Component","DatePicker","getActiveStates","Joi","InvestorFormPartial","state","locationOptions","schema","passiveIncomeGoal","number","min","required","validate","props","investorInformation","shcema","getLocationLabel","index","renderError","field","errors","componentDidMount","setState","render","onDateChange","onNumberInputChange","onNetRentPreferenceChange","onLocationChange","onLienCostChange","onLienInterestChange","onSecondaryMarketChange","secondaryMarket","startDate","investmentCapital","lienCosts","lienInterestRates","locations","netRentBreakdown","paydownDebtPct","reinvestPct","spendPct","map","location","abbreviation","locOption","name","avgLienCostLiveAuction","avgLienCostSecondary"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { getActiveStates } from \"./../../services/fakeStateService\";\nimport Joi from \"joi-browser\";\n\n// If i don't end up using this, I need to npm uninstall.\n// import Slider from \"rc-slider\";\n// import \"rc-slider/assets/index.css\";\n\n// const createSliderWithTooltip = Slider.createSliderWithTooltip;\n// const Range = createSliderWithTooltip(Slider.Range);\n// const Handle = Slider.Handle;\n\nclass InvestorFormPartial extends Component {\n  state = {\n    locationOptions: []\n  };\n\n  componentDidMount() {\n    this.setState({ locationOptions: getActiveStates() });\n  }\n\n  schema = {\n    passiveIncomeGoal: Joi.number()\n      .min(1)\n      .required()\n  };\n\n  validate = () => {\n    Joi.validate(this.props.investorInformation.passiveIncomeGoal, this.shcema);\n  };\n\n  getLocationLabel = index => {\n    switch (index) {\n      case 0:\n        return \"Primary\";\n      case 1:\n        return \"Alternate 1\";\n      default:\n        return \"Alternate 2\";\n    }\n  };\n\n  renderError = field => {\n    const { errors } = this.props;\n    if (!errors) return;\n    if (!errors[field]) return;\n    return (\n      <div>\n        <small>{errors[field]}</small>\n      </div>\n    );\n  };\n\n  render() {\n    const { locationOptions } = this.state;\n    const {\n      onDateChange,\n      onNumberInputChange,\n      onNetRentPreferenceChange,\n      onLocationChange,\n      onLienCostChange,\n      onLienInterestChange,\n      onSecondaryMarketChange\n    } = this.props;\n    const {\n      secondaryMarket,\n      startDate,\n      passiveIncomeGoal,\n      investmentCapital,\n      lienCosts,\n      lienInterestRates,\n      locations\n    } = this.props.investorInformation;\n    const {\n      paydownDebtPct,\n      reinvestPct,\n      spendPct\n    } = this.props.investorInformation.netRentBreakdown;\n\n    return (\n      <React.Fragment>\n        <h3 className=\"text-secondary\">Investor Information</h3>\n\n        {/* Income & Capital Group */}\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <h5>Income & Capital</h5>\n          </div>\n\n          <div className=\"form-group col-sm-4\">\n            <label htmlFor=\"startDate\">Start Month</label>\n            <br />\n            <DatePicker\n              selected={startDate}\n              onChange={onDateChange}\n              className=\"form-control\"\n              dateFormat=\"MM/yyyy\"\n              showMonthYearPicker\n            />\n          </div>\n\n          <div className=\"form-group col-sm-4\">\n            <label htmlFor=\"passiveIncomeGoal\">Passive Income</label>\n            <div className=\"input-group\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">$</span>\n              </div>\n              <input\n                id=\"passiveIncomeGoal\"\n                name=\"investorInformation.passiveIncomeGoal\"\n                onChange={onNumberInputChange}\n                className=\"form-control\"\n                type=\"number\"\n                value={passiveIncomeGoal}\n              />\n              {this.renderError(\"passiveIncomeGoal\")}\n            </div>\n          </div>\n\n          <div className=\"form-group col-sm-4\">\n            <label htmlFor=\"investmentCapital\">Available Capital</label>\n            <div className=\"input-group\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">$</span>\n              </div>\n              <input\n                id=\"investmentCapital\"\n                name=\"investorInformation.investmentCapital\"\n                onChange={onNumberInputChange}\n                className=\"form-control\"\n                type=\"number\"\n                value={investmentCapital}\n              />\n            </div>\n          </div>\n\n          {/* <div className=\"form-group col-sm-4\">\n            <label htmlFor=\"addedCapital\">Contributions</label>\n            <div className=\"input-group\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">$</span>\n              </div>\n              <input\n                id=\"addedCapital\"\n                name=\"addedCapital\"\n                onChange={onChange}\n                className=\"form-control\"\n                type=\"number\"\n                value={investmentCapital}\n              />\n            </div>\n          </div> */}\n        </div>\n\n        {/* Net Rent Group */}\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <h5>Plan for Net Rent</h5>\n          </div>\n\n          <div className=\"form-group col-sm-4\">\n            <label htmlFor=\"spendPct\">Retained Income</label>\n            <div className=\"input-group\">\n              <input\n                id=\"spendPct\"\n                name=\"spendPct\"\n                onChange={onNetRentPreferenceChange}\n                className=\"form-control\"\n                type=\"number\"\n                value={spendPct}\n              />\n              <div className=\"input-group-append\">\n                <span className=\"input-group-text\">%</span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"form-group col-sm-4\">\n            <label htmlFor=\"paydownDebtPct\">Pay Down Debt</label>\n            <div className=\"input-group\">\n              <input\n                id=\"paydownDebtPct\"\n                name=\"paydownDebtPct\"\n                onChange={onNetRentPreferenceChange}\n                className=\"form-control\"\n                type=\"number\"\n                value={paydownDebtPct}\n              />\n              <div className=\"input-group-append\">\n                <span className=\"input-group-text\">%</span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"form-group col-sm-4\">\n            <label htmlFor=\"reinvestPct\">Reinvest</label>\n            <div className=\"input-group\">\n              <input\n                id=\"reinvestPct\"\n                name=\"reinvestPct\"\n                onChange={onNetRentPreferenceChange}\n                className=\"form-control\"\n                type=\"number\"\n                value={reinvestPct}\n              />\n              <div className=\"input-group-append\">\n                <span className=\"input-group-text\">%</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Investement Location Group */}\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <h5>Investment Locations</h5>\n          </div>\n\n          <div className=\"form-group col-sm-12\">\n            <div className=\"custom-control custom-switch\">\n              <input\n                type=\"checkbox\"\n                className=\"custom-control-input\"\n                id=\"secondaryMarket\"\n                name=\"secondaryMarket\"\n                checked={secondaryMarket}\n                onChange={onSecondaryMarketChange}\n              />\n              <label className=\"custom-control-label\" htmlFor=\"secondaryMarket\">\n                Invest in Secondary Market\n              </label>\n            </div>\n          </div>\n\n          {/* Location Drop Downs */}\n          {locations.map((location, index) => (\n            <React.Fragment key={`location${index}`}>\n              <div className=\"form-group col-sm-6\">\n                <label htmlFor={`location${index}`}>\n                  {this.getLocationLabel(index)}\n                </label>\n                <select\n                  onChange={onLocationChange}\n                  className=\"form-control\"\n                  name={`location-${index}`}\n                  id={`location${index}`}\n                  value={location.abbreviation}\n                >\n                  {locationOptions.map(locOption => (\n                    <option\n                      key={locOption.abbreviation}\n                      value={locOption.abbreviation}\n                    >\n                      {locOption.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div hidden={secondaryMarket} className=\"form-group col-sm-3\">\n                <label htmlFor={`avgLienCostLiveAuction-${index}`}>\n                  Avg Lien Cost\n                </label>\n                <input\n                  id={`avgLienCostLiveAuction-${index}`}\n                  name={`avgLienCostLiveAuction-${index}`}\n                  className=\"form-control\"\n                  type=\"number\"\n                  onChange={onLienCostChange}\n                  value={lienCosts[index].avgLienCostLiveAuction}\n                  disabled={location.abbreviation === \"DEFAULT\"}\n                />\n              </div>\n              <div hidden={!secondaryMarket} className=\"form-group col-sm-4\">\n                <label htmlFor={`avgLienCostSecondary-${index}`}>\n                  Avg Redemptive Value\n                </label>\n                <input\n                  id={`avgLienCostSecondary-${index}`}\n                  name={`avgLienCostSecondary-${index}`}\n                  className=\"form-control\"\n                  type=\"number\"\n                  onChange={onLienCostChange}\n                  value={lienCosts[index].avgLienCostSecondary}\n                  disabled={location.abbreviation === \"DEFAULT\"}\n                />\n              </div>\n              <div className=\"form-group col-sm-2\">\n                <label htmlFor={`avgLienInterestRate-${index}`}>Interest</label>\n                <input\n                  id={`avgLienInterestRate-${index}`}\n                  name={`avgLienInterestRate-${index}`}\n                  className=\"form-control\"\n                  type=\"number\"\n                  onChange={onLienInterestChange}\n                  value={lienInterestRates[index]}\n                  disabled={location.abbreviation === \"DEFAULT\"}\n                />\n              </div>\n            </React.Fragment>\n          ))}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default InvestorFormPartial;\n\n// *****************************\n// Investor Information\n// *****************************\n// (1) Investment Start Date -- Done\n// (2) Passive Income Goal -- Done\n// (3) Cash Available for Investing -- Done\n// (4) Preference for treatment of Rent Money (Net Rent Breakdown) -- Done\n// -- (a) Paydown Debt (accelerate payments towards outstanding loans)\n// -- (b) Save for more liens (e.g. add to pool of money for buying more tax liens)\n// -- (c) Passive Income to enjoy some of it (take money out that will not be used for investing at all)\n// (5) States willing to Invest In -- WIP\n//  -- (a) First choice\n//  -- (b) Second choice\n//  -- (c) Third choice\n\n// ---- Will determing Redemption Period\n// ---- Will determine Foreclosure Months\n// ---- Need some way to prioritize one state over another\n"]},"metadata":{},"sourceType":"module"}