{"ast":null,"code":"var _jsxFileName = \"/Users/reappdev/repos/iwealth-tax-lien-calculator/src/components/dealFormPartial/dealFormPartial.jsx\";\nimport React, { Component } from \"react\";\nimport Slider, { createSliderWithTooltip } from \"rc-slider\";\nimport \"rc-slider/assets/index.css\";\nimport \"./dealFormPartial.css\";\nconst SliderWithTooltip = createSliderWithTooltip(Slider);\n\nclass DealFormPartial extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n    this.expenseMarks = {\n      0: \"0%\",\n      5: \"5%\",\n      10: \"10%\",\n      15: \"15%\"\n    };\n    this.grossRentMarks = {\n      500: \"$500\",\n      1000: \"$1,000\",\n      1500: \"$1,500\",\n      2000: \"$2,000\",\n      2500: \"$2,500\",\n      3000: \"$3,000\"\n    };\n    this.redemptionRatioMarks = {\n      1: \"1\",\n      2: \"2\",\n      3: \"3\",\n      4: \"4\",\n      5: \"5\",\n      6: \"6\",\n      7: \"7\",\n      8: \"8\",\n      9: \"9\",\n      10: \"10\"\n    };\n\n    this.getExpenseAmt = expense => {\n      const _this$props$dealInfor = this.props.dealInformation,\n            avgGrossRent = _this$props$dealInfor.avgGrossRent,\n            expenses = _this$props$dealInfor.expenses;\n      const amt = Math.round(avgGrossRent * expenses[expense] / 100);\n      return \"($\".concat(amt, \")\");\n    };\n  }\n\n  render() {\n    const onSliderChange = this.props.onSliderChange;\n    const _this$props$dealInfor2 = this.props.dealInformation,\n          avgGrossRent = _this$props$dealInfor2.avgGrossRent,\n          expenses = _this$props$dealInfor2.expenses,\n          redemptionRatio = _this$props$dealInfor2.redemptionRatio;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"text-secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Deal Information\"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Redemptions\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"slider-container col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"slider-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Non-Redemption Ratio\"), React.createElement(SliderWithTooltip, {\n      min: 1,\n      max: 10,\n      marks: this.redemptionRatioMarks,\n      tipFormatter: v => \"  1 in \".concat(v, \" tax liens becomes a house.  \"),\n      tipProps: {\n        overlayClassName: \"foo\"\n      },\n      value: redemptionRatio,\n      onChange: value => onSliderChange(value, \"dealInformation\", \"redemptionRatio\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"redemption-ratio-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"1 in \", redemptionRatio, \" liens becomes a house.\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Rental Income\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"slider-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Avg. Gross Rent\"), React.createElement(SliderWithTooltip, {\n      min: 500,\n      max: 3000,\n      step: 5,\n      marks: this.grossRentMarks,\n      tipFormatter: v => \"$\".concat(v),\n      tipProps: {\n        overlayClassName: \"foo\"\n      },\n      value: avgGrossRent,\n      onChange: value => onSliderChange(value, \"dealInformation\", \"avgGrossRent\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"avg-gross-rent-amount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"$\", avgGrossRent))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"slider-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Management\"), React.createElement(SliderWithTooltip, {\n      min: 0,\n      max: 15,\n      marks: this.expenseMarks,\n      tipFormatter: v => \"\".concat(v, \" %\"),\n      tipProps: {\n        overlayClassName: \"foo\"\n      },\n      value: expenses.management,\n      onChange: value => onSliderChange(value, \"dealInformation\", \"expenses.management\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"expense-cost\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, this.getExpenseAmt(\"management\")))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"slider-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Vacancy\"), React.createElement(SliderWithTooltip, {\n      min: 0,\n      max: 15,\n      marks: this.expenseMarks,\n      tipFormatter: v => \"\".concat(v, \" %\"),\n      tipProps: {\n        overlayClassName: \"foo\"\n      },\n      value: expenses.vacancy,\n      onChange: value => onSliderChange(value, \"dealInformation\", \"expenses.vacancy\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"expense-cost\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, this.getExpenseAmt(\"vacancy\")))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"slider-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Repair\"), React.createElement(SliderWithTooltip, {\n      min: 0,\n      max: 15,\n      marks: this.expenseMarks,\n      tipFormatter: v => \"\".concat(v, \" %\"),\n      tipProps: {\n        overlayClassName: \"foo\"\n      },\n      value: expenses.repair,\n      onChange: value => onSliderChange(value, \"dealInformation\", \"expenses.repair\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"expense-cost\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, this.getExpenseAmt(\"repair\")))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"col-sm-6 net-rent-title\",\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Avg. Net Rent\"), React.createElement(\"p\", {\n      className: \"col-sm-6 net-rent-amount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"$\", Math.round(avgGrossRent * (1 - (expenses.management + expenses.vacancy + expenses.repair) / 100)))));\n  }\n\n}\n\nexport default DealFormPartial;","map":{"version":3,"sources":["/Users/reappdev/repos/iwealth-tax-lien-calculator/src/components/dealFormPartial/dealFormPartial.jsx"],"names":["React","Component","Slider","createSliderWithTooltip","SliderWithTooltip","DealFormPartial","state","expenseMarks","grossRentMarks","redemptionRatioMarks","getExpenseAmt","expense","props","dealInformation","avgGrossRent","expenses","amt","Math","round","render","onSliderChange","redemptionRatio","v","overlayClassName","value","management","vacancy","repair","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Slider, { createSliderWithTooltip } from \"rc-slider\";\nimport \"rc-slider/assets/index.css\";\nimport \"./dealFormPartial.css\";\n\nconst SliderWithTooltip = createSliderWithTooltip(Slider);\n\nclass DealFormPartial extends Component {\n  state = {};\n\n  expenseMarks = {\n    0: \"0%\",\n    5: \"5%\",\n    10: \"10%\",\n    15: \"15%\"\n  };\n\n  grossRentMarks = {\n    500: \"$500\",\n    1000: \"$1,000\",\n    1500: \"$1,500\",\n    2000: \"$2,000\",\n    2500: \"$2,500\",\n    3000: \"$3,000\"\n  };\n\n  redemptionRatioMarks = {\n    1: \"1\",\n    2: \"2\",\n    3: \"3\",\n    4: \"4\",\n    5: \"5\",\n    6: \"6\",\n    7: \"7\",\n    8: \"8\",\n    9: \"9\",\n    10: \"10\"\n  };\n\n  getExpenseAmt = expense => {\n    const { avgGrossRent, expenses } = this.props.dealInformation;\n    const amt = Math.round((avgGrossRent * expenses[expense]) / 100);\n    return `($${amt})`;\n  };\n\n  render() {\n    const { onSliderChange } = this.props;\n    const {\n      avgGrossRent,\n      expenses,\n      redemptionRatio\n    } = this.props.dealInformation;\n\n    return (\n      <React.Fragment>\n        <h3 className=\"text-secondary\">Deal Information</h3>\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <h5>Redemptions</h5>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"slider-container col-sm-6\">\n            <p className=\"slider-title\">Non-Redemption Ratio</p>\n            <SliderWithTooltip\n              min={1}\n              max={10}\n              marks={this.redemptionRatioMarks}\n              tipFormatter={v => `  1 in ${v} tax liens becomes a house.  `}\n              tipProps={{ overlayClassName: \"foo\" }}\n              value={redemptionRatio}\n              onChange={value =>\n                onSliderChange(value, \"dealInformation\", \"redemptionRatio\")\n              }\n            />\n          </div>\n          <div className=\"col-sm-6\">\n            <p className=\"redemption-ratio-text\">\n              1 in {redemptionRatio} liens becomes a house.\n            </p>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <h5>Rental Income</h5>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <p className=\"slider-title\">Avg. Gross Rent</p>\n            <SliderWithTooltip\n              min={500}\n              max={3000}\n              step={5}\n              marks={this.grossRentMarks}\n              tipFormatter={v => `$${v}`}\n              tipProps={{ overlayClassName: \"foo\" }}\n              value={avgGrossRent}\n              onChange={value =>\n                onSliderChange(value, \"dealInformation\", \"avgGrossRent\")\n              }\n            />\n          </div>\n          <div className=\"col-sm-6\">\n            <p className=\"avg-gross-rent-amount\">${avgGrossRent}</p>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <p className=\"slider-title\">Management</p>\n            <SliderWithTooltip\n              min={0}\n              max={15}\n              marks={this.expenseMarks}\n              tipFormatter={v => `${v} %`}\n              tipProps={{ overlayClassName: \"foo\" }}\n              value={expenses.management}\n              onChange={value =>\n                onSliderChange(value, \"dealInformation\", \"expenses.management\")\n              }\n            />\n          </div>\n          <div className=\"col-sm-6\">\n            <p className=\"expense-cost\">{this.getExpenseAmt(\"management\")}</p>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <p className=\"slider-title\">Vacancy</p>\n            <SliderWithTooltip\n              min={0}\n              max={15}\n              marks={this.expenseMarks}\n              tipFormatter={v => `${v} %`}\n              tipProps={{ overlayClassName: \"foo\" }}\n              value={expenses.vacancy}\n              onChange={value =>\n                onSliderChange(value, \"dealInformation\", \"expenses.vacancy\")\n              }\n            />\n          </div>\n          <div className=\"col-sm-6\">\n            <p className=\"expense-cost\">{this.getExpenseAmt(\"vacancy\")}</p>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <p className=\"slider-title\">Repair</p>\n            <SliderWithTooltip\n              min={0}\n              max={15}\n              marks={this.expenseMarks}\n              tipFormatter={v => `${v} %`}\n              tipProps={{ overlayClassName: \"foo\" }}\n              value={expenses.repair}\n              onChange={value =>\n                onSliderChange(value, \"dealInformation\", \"expenses.repair\")\n              }\n            />\n          </div>\n          <div className=\"col-sm-6\">\n            <p className=\"expense-cost\">{this.getExpenseAmt(\"repair\")}</p>\n          </div>\n        </div>\n        <div className=\"row\">\n          <p\n            className=\"col-sm-6 net-rent-title\"\n            style={{ textAlign: \"center\" }}\n          >\n            Avg. Net Rent\n          </p>\n          <p className=\"col-sm-6 net-rent-amount\">\n            $\n            {Math.round(\n              avgGrossRent *\n                (1 -\n                  (expenses.management + expenses.vacancy + expenses.repair) /\n                    100)\n            )}\n          </p>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default DealFormPartial;\n"]},"metadata":{},"sourceType":"module"}