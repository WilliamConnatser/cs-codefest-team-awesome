{"ast":null,"code":"var _jsxFileName = \"/Users/reappdev/repos/iwealth-tax-lien-calculator/src/components/resultsTable/resultsTable.jsx\";\nimport React, { Component } from \"react\";\nimport { formatMoney, round } from \"./../../utils/NumberUtils\";\nimport \"./resultsTable.css\";\n\nclass ResultsTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      viewBy: \"y\"\n    };\n\n    this.handleViewByChange = value => {\n      this.setState({\n        viewBy: value\n      });\n    };\n  }\n\n  getStandardizedPeriods() {\n    const periods = this.props.periods;\n    return periods.map((p, index) => ({\n      year: p.date.getFullYear(),\n      date: p.date.toLocaleDateString(\"en-US\", {\n        year: \"2-digit\",\n        month: \"short\"\n      }),\n      investmentCapital: round(p.investmentCapital, 0),\n      numLiensPurchased: p.purchasePlan ? p.purchasePlan.qty : 0,\n      lienPurchaseCost: p.purchasePlan ? round(p.purchasePlan.qty * -p.purchasePlan.costPerLien, 0) : 0,\n      serviceFees: p.purchasePlan ? round(-p.purchasePlan.fee, 0) : 0,\n      foreclosureCost: p.foreclosureCost ? round(-p.foreclosureCost, 0) : 0,\n      redemptionIncome: p.redemptionIncome ? round(p.redemptionIncome, 0) : 0,\n      totalHouseCount: p.totalHouseCount ? p.totalHouseCount : \"\",\n      outstandingDebt: p.totalLoanBalance ? round(p.totalLoanBalance, 0) : 0,\n      requiredDebtPayment: p.requiredDebtPayment ? round(-p.requiredDebtPayment, 0) : 0,\n      grossRentalIncome: p.rentBreakdown.totalGrossRent ? round(p.rentBreakdown.totalGrossRent, 0) : 0,\n      rentalManagementCost: p.rentBreakdown.totalManagement ? round(-p.rentBreakdown.totalManagement, 0) : 0,\n      rentalVacancyCost: p.rentBreakdown.totalVacancy ? round(-p.rentBreakdown.totalVacancy, 0) : 0,\n      rentalRepairCost: p.rentBreakdown.totalRepair ? round(-p.rentBreakdown.totalRepair, 0) : 0,\n      realizedPassiveIncome: p.passiveIncome ? round(p.passiveIncome, 0) : 0,\n      availablePassiveIncome: p.rentBreakdown.totalNetRent ? round(p.rentBreakdown.totalNetRent - p.requiredDebtPayment, 0) : 0,\n      extraDebtPayment: p.extraDebtPayment ? round(-p.extraDebtPayment, 0) : 0,\n      reinvestmentAmt: p.rentReinvested ? round(p.rentReinvested, 0) : 0\n    }));\n  }\n\n  collapseToAnnualValues(standardizedPeriod) {\n    if (standardizedPeriod.length === 0) return [];\n    const years = standardizedPeriod.map(sp => sp.year);\n    const minYear = Math.min.apply(null, years);\n    const maxYear = Math.max.apply(null, years);\n    let aggregatedData = [];\n\n    for (let yr = minYear; yr <= maxYear; yr++) {\n      // console.log(yr);\n      const matchingMonths = standardizedPeriod.filter(sp => sp.year === yr);\n      let data = {\n        year: yr,\n        investmentCapital: 0,\n        numLiensPurchased: 0,\n        lienPurchaseCost: 0,\n        serviceFees: 0,\n        foreclosureCost: 0,\n        redemptionIncome: 0,\n        totalHouseCount: 0,\n        outstandingDebt: 0,\n        requiredDebtPayment: 0,\n        grossRentalIncome: 0,\n        rentalManagementCost: 0,\n        rentalVacancyCost: 0,\n        rentalRepairCost: 0,\n        realizedPassiveIncome: 0,\n        availablePassiveIncome: 0,\n        extraDebtPayment: 0,\n        reinvestmentAmt: 0\n      };\n      matchingMonths.forEach((mth, index) => {\n        data.numLiensPurchased += mth.numLiensPurchased;\n        data.lienPurchaseCost += mth.lienPurchaseCost;\n        data.serviceFees += mth.serviceFees;\n        data.redemptionIncome += mth.redemptionIncome;\n        data.foreclosureCost += mth.foreclosureCost;\n        data.requiredDebtPayment += mth.requiredDebtPayment;\n        data.grossRentalIncome += mth.grossRentalIncome;\n        data.rentalManagementCost += mth.rentalManagementCost;\n        data.rentalVacancyCost += mth.rentalVacancyCost;\n        data.rentalRepairCost += mth.rentalRepairCost;\n        data.realizedPassiveIncome += mth.realizedPassiveIncome;\n        data.availablePassiveIncome += mth.availablePassiveIncome;\n        data.extraDebtPayment += mth.extraDebtPayment;\n        data.reinvestmentAmt += mth.reinvestmentAmt;\n\n        if (index === matchingMonths.length - 1) {\n          data.investmentCapital = mth.investmentCapital;\n          data.totalHouseCount = mth.totalHouseCount;\n          data.outstandingDebt = mth.outstandingDebt;\n        }\n      });\n      aggregatedData.push(data);\n    }\n\n    return aggregatedData;\n  }\n\n  renderResultMessage(periods) {\n    const viewBy = this.state.viewBy;\n    const passiveIncomeGoal = this.props.investorInformation.passiveIncomeGoal;\n    const lastPeriod = periods[periods.length - 1];\n    const availablePassiveIncome = lastPeriod.availablePassiveIncome;\n\n    if (availablePassiveIncome >= passiveIncomeGoal) {\n      return \"You reached your passive income goal of $\".concat(passiveIncomeGoal, \"\\n       in \").concat(Math.floor(periods.length), \" \").concat(viewBy === \"y\" ? \"years\" : \"months\");\n    } else {\n      return \"You were not able to reach your passive income goal of $\".concat(passiveIncomeGoal, \"\\n       within 30 years\");\n    }\n  }\n\n  render() {\n    const viewBy = this.state.viewBy;\n    let periods = this.getStandardizedPeriods();\n\n    if (viewBy === \"y\") {\n      periods = this.collapseToAnnualValues(periods);\n    }\n\n    return periods.length === 0 ? \"\" : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"text-secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Investment Plan\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, this.renderResultMessage(periods))), React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.handleViewByChange(\"y\"),\n      className: \"btn btn-\".concat(this.state.viewBy === \"y\" ? \"primary\" : \"default\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Years\"), React.createElement(\"button\", {\n      onClick: () => this.handleViewByChange(\"m\"),\n      className: \"btn btn-\".concat(this.state.viewBy === \"y\" ? \"default\" : \"primary\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Months\")), React.createElement(\"table\", {\n      className: \"table table-striped table-condensed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Beginning Capital\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Realized Passive Income\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Available Passive Income\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"# Liens Purchased\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Lien Purchase Cost\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Fee\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Foreclosure Cost\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Lien Redemption Income\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Total Houses\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Outstanding Debt\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Min Debt Payment\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Gross Rental Income\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Management Expense\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Vacancy Expense\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Repair Expense\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Extra Debt Payment\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Reinvest Cash\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, periods.map((p, index) => React.createElement(\"tr\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, p.date || p.year), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, formatMoney(p.investmentCapital, 0)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, formatMoney(p.realizedPassiveIncome, 0)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, formatMoney(p.availablePassiveIncome, 0)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, p.numLiensPurchased), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, formatMoney(p.lienPurchaseCost, 0)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, formatMoney(p.serviceFees, 0)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, formatMoney(p.foreclosureCost, 0)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, formatMoney(p.redemptionIncome, 0)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, p.totalHouseCount), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, formatMoney(p.outstandingDebt, 0)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, formatMoney(p.requiredDebtPayment, 0)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, formatMoney(p.grossRentalIncome, 0)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, formatMoney(p.rentalManagementCost, 0)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, formatMoney(p.rentalVacancyCost, 0)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, formatMoney(p.rentalRepairCost, 0)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, formatMoney(p.extraDebtPayment, 0)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, formatMoney(p.reinvestmentAmt, 0)))))));\n  }\n\n}\n\nexport default ResultsTable;","map":{"version":3,"sources":["/Users/reappdev/repos/iwealth-tax-lien-calculator/src/components/resultsTable/resultsTable.jsx"],"names":["React","Component","formatMoney","round","ResultsTable","state","viewBy","handleViewByChange","value","setState","getStandardizedPeriods","periods","props","map","p","index","year","date","getFullYear","toLocaleDateString","month","investmentCapital","numLiensPurchased","purchasePlan","qty","lienPurchaseCost","costPerLien","serviceFees","fee","foreclosureCost","redemptionIncome","totalHouseCount","outstandingDebt","totalLoanBalance","requiredDebtPayment","grossRentalIncome","rentBreakdown","totalGrossRent","rentalManagementCost","totalManagement","rentalVacancyCost","totalVacancy","rentalRepairCost","totalRepair","realizedPassiveIncome","passiveIncome","availablePassiveIncome","totalNetRent","extraDebtPayment","reinvestmentAmt","rentReinvested","collapseToAnnualValues","standardizedPeriod","length","years","sp","minYear","Math","min","apply","maxYear","max","aggregatedData","yr","matchingMonths","filter","data","forEach","mth","push","renderResultMessage","passiveIncomeGoal","investorInformation","lastPeriod","floor","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { formatMoney, round } from \"./../../utils/NumberUtils\";\nimport \"./resultsTable.css\";\n\nclass ResultsTable extends Component {\n  state = {\n    viewBy: \"y\"\n  };\n\n  handleViewByChange = value => {\n    this.setState({ viewBy: value });\n  };\n\n  getStandardizedPeriods() {\n    const { periods } = this.props;\n    return periods.map((p, index) => ({\n      year: p.date.getFullYear(),\n      date: p.date.toLocaleDateString(\"en-US\", {\n        year: \"2-digit\",\n        month: \"short\"\n      }),\n      investmentCapital: round(p.investmentCapital, 0),\n      numLiensPurchased: p.purchasePlan ? p.purchasePlan.qty : 0,\n      lienPurchaseCost: p.purchasePlan\n        ? round(p.purchasePlan.qty * -p.purchasePlan.costPerLien, 0)\n        : 0,\n      serviceFees: p.purchasePlan ? round(-p.purchasePlan.fee, 0) : 0,\n      foreclosureCost: p.foreclosureCost ? round(-p.foreclosureCost, 0) : 0,\n      redemptionIncome: p.redemptionIncome ? round(p.redemptionIncome, 0) : 0,\n      totalHouseCount: p.totalHouseCount ? p.totalHouseCount : \"\",\n      outstandingDebt: p.totalLoanBalance ? round(p.totalLoanBalance, 0) : 0,\n      requiredDebtPayment: p.requiredDebtPayment\n        ? round(-p.requiredDebtPayment, 0)\n        : 0,\n      grossRentalIncome: p.rentBreakdown.totalGrossRent\n        ? round(p.rentBreakdown.totalGrossRent, 0)\n        : 0,\n      rentalManagementCost: p.rentBreakdown.totalManagement\n        ? round(-p.rentBreakdown.totalManagement, 0)\n        : 0,\n      rentalVacancyCost: p.rentBreakdown.totalVacancy\n        ? round(-p.rentBreakdown.totalVacancy, 0)\n        : 0,\n      rentalRepairCost: p.rentBreakdown.totalRepair\n        ? round(-p.rentBreakdown.totalRepair, 0)\n        : 0,\n      realizedPassiveIncome: p.passiveIncome ? round(p.passiveIncome, 0) : 0,\n      availablePassiveIncome: p.rentBreakdown.totalNetRent\n        ? round(p.rentBreakdown.totalNetRent - p.requiredDebtPayment, 0)\n        : 0,\n      extraDebtPayment: p.extraDebtPayment ? round(-p.extraDebtPayment, 0) : 0,\n      reinvestmentAmt: p.rentReinvested ? round(p.rentReinvested, 0) : 0\n    }));\n  }\n\n  collapseToAnnualValues(standardizedPeriod) {\n    if (standardizedPeriod.length === 0) return [];\n\n    const years = standardizedPeriod.map(sp => sp.year);\n    const minYear = Math.min.apply(null, years);\n    const maxYear = Math.max.apply(null, years);\n\n    let aggregatedData = [];\n\n    for (let yr = minYear; yr <= maxYear; yr++) {\n      // console.log(yr);\n      const matchingMonths = standardizedPeriod.filter(sp => sp.year === yr);\n\n      let data = {\n        year: yr,\n        investmentCapital: 0,\n        numLiensPurchased: 0,\n        lienPurchaseCost: 0,\n        serviceFees: 0,\n        foreclosureCost: 0,\n        redemptionIncome: 0,\n        totalHouseCount: 0,\n        outstandingDebt: 0,\n        requiredDebtPayment: 0,\n        grossRentalIncome: 0,\n        rentalManagementCost: 0,\n        rentalVacancyCost: 0,\n        rentalRepairCost: 0,\n        realizedPassiveIncome: 0,\n        availablePassiveIncome: 0,\n        extraDebtPayment: 0,\n        reinvestmentAmt: 0\n      };\n\n      matchingMonths.forEach((mth, index) => {\n        data.numLiensPurchased += mth.numLiensPurchased;\n        data.lienPurchaseCost += mth.lienPurchaseCost;\n        data.serviceFees += mth.serviceFees;\n        data.redemptionIncome += mth.redemptionIncome;\n        data.foreclosureCost += mth.foreclosureCost;\n        data.requiredDebtPayment += mth.requiredDebtPayment;\n        data.grossRentalIncome += mth.grossRentalIncome;\n        data.rentalManagementCost += mth.rentalManagementCost;\n        data.rentalVacancyCost += mth.rentalVacancyCost;\n        data.rentalRepairCost += mth.rentalRepairCost;\n        data.realizedPassiveIncome += mth.realizedPassiveIncome;\n        data.availablePassiveIncome += mth.availablePassiveIncome;\n        data.extraDebtPayment += mth.extraDebtPayment;\n        data.reinvestmentAmt += mth.reinvestmentAmt;\n\n        if (index === matchingMonths.length - 1) {\n          data.investmentCapital = mth.investmentCapital;\n          data.totalHouseCount = mth.totalHouseCount;\n          data.outstandingDebt = mth.outstandingDebt;\n        }\n      });\n\n      aggregatedData.push(data);\n    }\n\n    return aggregatedData;\n  }\n\n  renderResultMessage(periods) {\n    const { viewBy } = this.state;\n    const { passiveIncomeGoal } = this.props.investorInformation;\n    const lastPeriod = periods[periods.length - 1];\n    const { availablePassiveIncome } = lastPeriod;\n\n    if (availablePassiveIncome >= passiveIncomeGoal) {\n      return `You reached your passive income goal of $${passiveIncomeGoal}\n       in ${Math.floor(periods.length)} ${viewBy === \"y\" ? \"years\" : \"months\"}`;\n    } else {\n      return `You were not able to reach your passive income goal of $${passiveIncomeGoal}\n       within 30 years`;\n    }\n  }\n\n  render() {\n    const { viewBy } = this.state;\n\n    let periods = this.getStandardizedPeriods();\n\n    if (viewBy === \"y\") {\n      periods = this.collapseToAnnualValues(periods);\n    }\n\n    return periods.length === 0 ? (\n      \"\"\n    ) : (\n      <React.Fragment>\n        <h3 className=\"text-secondary\">Investment Plan</h3>\n        <div>\n          <p>{this.renderResultMessage(periods)}</p>\n        </div>\n        <div className=\"\">\n          <button\n            onClick={() => this.handleViewByChange(\"y\")}\n            className={`btn btn-${\n              this.state.viewBy === \"y\" ? \"primary\" : \"default\"\n            }`}\n          >\n            Years\n          </button>\n          <button\n            onClick={() => this.handleViewByChange(\"m\")}\n            className={`btn btn-${\n              this.state.viewBy === \"y\" ? \"default\" : \"primary\"\n            }`}\n          >\n            Months\n          </button>\n        </div>\n        <table className=\"table table-striped table-condensed\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Date</th>\n              <th scope=\"col\">Beginning Capital</th>\n              <th scope=\"col\">Realized Passive Income</th>\n              <th scope=\"col\">Available Passive Income</th>\n              <th scope=\"col\"># Liens Purchased</th>\n              <th scope=\"col\">Lien Purchase Cost</th>\n              <th scope=\"col\">Fee</th>\n              <th scope=\"col\">Foreclosure Cost</th>\n              <th scope=\"col\">Lien Redemption Income</th>\n              <th scope=\"col\">Total Houses</th>\n              <th scope=\"col\">Outstanding Debt</th>\n              <th scope=\"col\">Min Debt Payment</th>\n              <th scope=\"col\">Gross Rental Income</th>\n              <th scope=\"col\">Management Expense</th>\n              <th scope=\"col\">Vacancy Expense</th>\n              <th scope=\"col\">Repair Expense</th>\n              <th scope=\"col\">Extra Debt Payment</th>\n              <th scope=\"col\">Reinvest Cash</th>\n            </tr>\n          </thead>\n          <tbody>\n            {periods.map((p, index) => (\n              <tr key={index}>\n                <td>{p.date || p.year}</td>\n                <td>{formatMoney(p.investmentCapital, 0)}</td>\n                <td>{formatMoney(p.realizedPassiveIncome, 0)}</td>\n                <td>{formatMoney(p.availablePassiveIncome, 0)}</td>\n                <td>{p.numLiensPurchased}</td>\n                <td>{formatMoney(p.lienPurchaseCost, 0)}</td>\n                <td>{formatMoney(p.serviceFees, 0)}</td>\n                <td>{formatMoney(p.foreclosureCost, 0)}</td>\n                <td>{formatMoney(p.redemptionIncome, 0)}</td>\n                <td>{p.totalHouseCount}</td>\n                <td>{formatMoney(p.outstandingDebt, 0)}</td>\n                <td>{formatMoney(p.requiredDebtPayment, 0)}</td>\n                <td>{formatMoney(p.grossRentalIncome, 0)}</td>\n                <td>{formatMoney(p.rentalManagementCost, 0)}</td>\n                <td>{formatMoney(p.rentalVacancyCost, 0)}</td>\n                <td>{formatMoney(p.rentalRepairCost, 0)}</td>\n                <td>{formatMoney(p.extraDebtPayment, 0)}</td>\n                <td>{formatMoney(p.reinvestmentAmt, 0)}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ResultsTable;\n"]},"metadata":{},"sourceType":"module"}